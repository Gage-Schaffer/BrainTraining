"""
Project Euler - Problem 2 - Even Fibonacci Numbers
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with $1$ and $2$, the first $10$ terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

"""
import time

start = time.time()

def fibonacci(l1):
    next_number = l1[-2] + l1[-1]
    if next_number <= 4000000:
        l1.append(next_number)
        fibonacci(l1)
    else:
        return


def summed_even_numbers():
    l1 = [1, 2]
    fibonacci(l1)
    sum_even_numbers = 0
    for number in l1:
        if number % 2 == 0:
            sum_even_numbers += number
        else:
            continue
    return sum_even_numbers


print(summed_even_numbers())
end = time.time()
print(end - start, " seconds")
